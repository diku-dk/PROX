SET( CMAKE_INCLUDE_CURRENT_DIR ON                                     )
SET( CMAKE_AUTOMOC ON                                                 )

SET( SOFT_BODY_GUI_CODE_PATH     "${PROJECT_SOURCE_DIR}/APPLICATIONS/SOFT_BODY/SOFT_BODY_GUI"          )
SET( SOFT_BODY_GUI_NAME          "soft_body_gui"                                                       )
SET( SOFT_BODY_GUI_RUN_PATH      "${PROJECT_SOURCE_DIR}/bin/soft_body_gui"                             )
SET( SOFT_BODY_GUI_SHADERS_PATH  "${PROJECT_SOURCE_DIR}/APPLICATIONS/SOFT_BODY/SOFT_BODY_GUI/shaders"  )
SET( SOFT_BODY_GUI_TEXTURES_PATH "${PROJECT_SOURCE_DIR}/resources/textures"                            )
SET( SOFT_BODY_GUI_OBJS_PATH     "${PROJECT_SOURCE_DIR}/resources/objs"                                )
SET( SOFT_BODY_GUI_CFGS_PATH     "${PROJECT_SOURCE_DIR}/bin/soft_body_gui"                             )

INCLUDE_DIRECTORIES(
  ${GLM_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIR}
  ${Boost_INCLUDE_DIRS}
  ${PROJECT_SOURCE_DIR}/3RDPARTY/TinyXML
  ${PROJECT_SOURCE_DIR}/3RDPARTY/TetGen
  ${PROJECT_SOURCE_DIR}/3RDPARTY/QHull/QHull/include
  ${PROJECT_SOURCE_DIR}/3RDPARTY/GLM/glm_0_9_5_4/
  ${PROJECT_SOURCE_DIR}/FOUNDATION/GL3/GL3/include    
  ${PROJECT_SOURCE_DIR}/FOUNDATION/UTIL/UTIL/include
  ${PROJECT_SOURCE_DIR}/FOUNDATION/TINY/TINY/include 
  ${PROJECT_SOURCE_DIR}/FOUNDATION/SPARSE/SPARSE/include 
  ${PROJECT_SOURCE_DIR}/FOUNDATION/GEOMETRY/GEOMETRY/include 
  ${PROJECT_SOURCE_DIR}/FOUNDATION/MESH_ARRAY/MESH_ARRAY/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/KDOP/KDOP/include
  ${PROJECT_SOURCE_DIR}/SIMULATION/HYPER/HYPER/include    
  ${PROJECT_SOURCE_DIR}/APPLICATIONS/SOFT_BODY/SOFT_BODY_SHARED/include 
  ${SOFT_BODY_GUI_CODE_PATH}/include
)

IF(HAS_DIKUCL)
  INCLUDE_DIRECTORIES(
      ${PROJECT_SOURCE_DIR}/FOUNDATION/DIKUCL/DIKUCL/include 
    )
ENDIF(HAS_DIKUCL)

FILE(GLOB 
  SOFT_BODY_GUI_SOURCES
  ${SOFT_BODY_GUI_CODE_PATH}/src/*.cpp 
  )

FILE(GLOB
  SOFT_BODY_GUI_HEADERS
  ${SOFT_BODY_GUI_CODE_PATH}/include/*.h 
  )

FILE(GLOB
  SOFT_BODY_GUI_SHADERS
  ${SOFT_BODY_GUI_SHADERS_PATH}/*.glsl
  )

FILE(GLOB
  SOFT_BODY_GUI_CFGS
  ${SOFT_BODY_GUI_CFGS_PATH}/*.cfg
  )

ADD_EXECUTABLE(
  ${SOFT_BODY_GUI_NAME} 
  ${SOFT_BODY_GUI_SOURCES} 
  ${SOFT_BODY_GUI_HEADERS}
  ${SOFT_BODY_GUI_SHADERS}
  ${SOFT_BODY_GUI_CFGS}
  )

TARGET_LINK_LIBRARIES(
  ${SOFT_BODY_GUI_NAME}
  soft_body_shared
  gl3
  kdop
  hyper
  tiny
  sparse
  geometry
  mesh_array
  util
  tetgen
  qhull
  Qt5::Widgets
  Qt5::Gui
  Qt5::Core
  Qt5::OpenGL
  ${OPENGL_LIBRARIES}
  ${GLEW_LIBRARIES}
  ${DEVIL_LIBRARIES}
  ${Boost_SYSTEM_LIBRARIES} 
  ${Boost_FILESYSTEM_LIBRARIES} 
  )

IF(HAS_DIKUCL)
  TARGET_LINK_LIBRARIES( ${SOFT_BODY_GUI_NAME} dikucl)
ENDIF(HAS_DIKUCL)

SOURCE_GROUP(Shaders FILES ${SOFT_BODY_GUI_SHADERS} )
SOURCE_GROUP(Config  FILES ${SOFT_BODY_GUI_CFGS}    )

SET_TARGET_PROPERTIES(${SOFT_BODY_GUI_NAME} PROPERTIES DEBUG_POSTFIX "D" )

SET_TARGET_PROPERTIES(${SOFT_BODY_GUI_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY                "${SOFT_BODY_GUI_RUN_PATH}")
SET_TARGET_PROPERTIES(${SOFT_BODY_GUI_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG          "${SOFT_BODY_GUI_RUN_PATH}")
SET_TARGET_PROPERTIES(${SOFT_BODY_GUI_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE        "${SOFT_BODY_GUI_RUN_PATH}")
SET_TARGET_PROPERTIES(${SOFT_BODY_GUI_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL     "${SOFT_BODY_GUI_RUN_PATH}")
SET_TARGET_PROPERTIES(${SOFT_BODY_GUI_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${SOFT_BODY_GUI_RUN_PATH}")
